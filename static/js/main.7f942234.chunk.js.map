{"version":3,"sources":["components/ui/Card.jsx","components/home/Home.jsx","components/nav/Nav.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","data","market_cap_rank","src","image","alt","name","symbol","current_price","toLocaleString","price_change_percentage_24h","toFixed","total_volume","market_cap","Home","useState","coins","setCoins","search","setSearch","useEffect","fetch","then","response","json","filteredCoins","filter","coin","toLowerCase","includes","Fragment","type","id","autoComplete","onChange","e","target","value","map","Nav","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAmBeA,MAhBf,SAAcC,GACV,OACI,sBAAKC,UAAU,OAAf,UACI,mBAAGA,UAAU,YAAb,SAA0BD,EAAME,KAAKC,kBACrC,oBAAGF,UAAU,YAAb,cAA0B,qBAAKG,IAAKJ,EAAME,KAAKG,MAAOC,IAAI,oBAA1D,IAAgFN,EAAME,KAAKK,KAA3F,MAAoGP,EAAME,KAAKM,OAA/G,QACA,4BAAIR,EAAME,KAAKO,cAAcC,eAAe,WAG5C,oBAAGT,UAAWD,EAAME,KAAKS,4BAA8B,EAAI,QAAU,MAArE,UAA6EX,EAAME,KAAKS,4BAA4BC,QAAQ,GAA5H,QAEA,4BAAIZ,EAAME,KAAKW,aAAaH,eAAe,WAC3C,4BAAIV,EAAME,KAAKY,WAAWJ,eAAe,e,MCwCtCK,MAlDf,WAAiB,IAAD,EAEcC,mBAAS,IAFvB,mBAELC,EAFK,KAEEC,EAFF,OAGgBF,mBAAS,IAHzB,mBAGLG,EAHK,KAGGC,EAHH,KAUZC,qBAAU,WAENC,MAAM,4HAA4HC,MAAK,SAAAC,GACnI,OAAOA,EAASC,UACjBF,MAAK,SAAArB,GACJgB,EAAShB,QAEd,IAGH,IAAMwB,EAAgBT,EAAMU,QAAO,SAAAC,GAC/B,OAAOA,EAAKrB,KAAKsB,cAAcC,SAASX,EAAOU,kBAGnD,OACI,eAAC,IAAME,SAAP,WACI,sBAAK9B,UAAU,cAAf,UACI,0DACA,iCACI,mBAAGA,UAAU,kBACb,uBAAO+B,KAAK,OAAOC,GAAG,OAAOC,aAAa,MAAMC,SAxBpC,SAAAC,GACxBhB,EAAUgB,EAAEC,OAAOC,gBA0Bf,sBAAKrC,UAAU,YAAf,UACI,mBAAGgC,GAAG,OAAN,eACA,gDACA,8CACA,oCACA,2CACA,2CAEJ,8BACKP,EAAca,KAAI,SAACrC,GAChB,OAAO,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAK+B,a,MCpC5BO,MARf,WACI,OACI,8BACI,wECSGC,MAXf,WACE,OACE,sBAAKxC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,+BACE,cAAC,EAAD,UCGOyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7f942234.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nfunction Card(props) {\n    return (\n        <div className=\"card\">\n            <p className=\"coin-rank\">{props.data.market_cap_rank}</p>\n            <p className=\"coin-name\"> <img src={props.data.image} alt=\"crypto-coin-img\" /> {props.data.name} ( {props.data.symbol} )</p>\n            <p>{props.data.current_price.toLocaleString(\"en-In\")}</p>\n\n            {/* conditinal renderning. */}\n            <p className={props.data.price_change_percentage_24h > 0 ? \"green\" : \"red\"}>{props.data.price_change_percentage_24h.toFixed(2)} %</p>\n\n            <p>{props.data.total_volume.toLocaleString(\"en-In\")}</p>\n            <p>{props.data.market_cap.toLocaleString(\"en-In\")}</p>\n        </div>\n    )\n}\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport Card from '../ui/Card';\nimport './Home.css'\n\nfunction Home() {\n\n    const [coins, setCoins] = useState([]);\n    const [search, setSearch] = useState(\"\");\n\n    // Search change handler.\n    const searchChangeHandler = e => {\n        setSearch(e.target.value);\n    }\n\n    useEffect(() => {\n        // fetching the data about crypto from api link.\n        fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=100&page=1&sparkline=false\").then(response => {\n            return response.json();\n        }).then(data => {\n            setCoins(data)\n        })\n    }, [])\n\n    // filtering the coins on the bases of search.\n    const filteredCoins = coins.filter(coin => {\n        return coin.name.toLowerCase().includes(search.toLowerCase())\n    })\n\n    return (\n        <React.Fragment>\n            <div className=\"coin-search\">\n                <h2>Search for a crypto Coin</h2>\n                <form>\n                    <i className=\"fas fa-search\"></i>\n                    <input type=\"text\" id=\"coin\" autoComplete=\"off\" onChange={searchChangeHandler} />\n                </form>\n            </div>\n            <div className=\"card-head\">\n                <p id=\"rank\">#</p>\n                <p>Coin ( Symbol )</p>\n                <p>Current Price</p>\n                <p>24h</p>\n                <p>24h Volume</p>\n                <p>Mkt Cap</p>\n            </div>\n            <div>\n                {filteredCoins.map((data) => {\n                    return <Card key={data.id} data={data} />\n                })}\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Home;\n","import React from 'react';\nimport './Nav.css';\n\nfunction Nav() {\n    return (\n        <nav>\n            <h1>Cryptocurrency Prices by Market Cap</h1>\n        </nav>\n    )\n}\n\nexport default Nav;\n","import './App.css';\nimport Home from './components/home/Home';\nimport Nav from './components/nav/Nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <main>\n        <Home />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}